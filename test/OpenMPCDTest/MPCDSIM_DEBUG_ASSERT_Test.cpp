/**
 * @file
 * Tests the `OPENMPCD_DEBUG_ASSERT` macro.
 */

#include <OpenMPCDTest/include_catch.hpp>

#ifndef OPENMPCD_DEBUG
#define OPENMPCD_DEBUG
#endif

#include <OpenMPCD/OPENMPCD_DEBUG_ASSERT.hpp>

SCENARIO(
	"`OPENMPCD_DEBUG_ASSERT_HOST_EXCEPTIONTYPE`, activated",
	"")
{
	using OpenMPCD::NULLPointerException;

	OPENMPCD_DEBUG_ASSERT_HOST_EXCEPTIONTYPE(true, NULLPointerException);
	OPENMPCD_DEBUG_ASSERT_HOST_EXCEPTIONTYPE(1 == 1, NULLPointerException);

	REQUIRE_THROWS_AS(
		OPENMPCD_DEBUG_ASSERT_HOST_EXCEPTIONTYPE(false, NULLPointerException),
		NULLPointerException);
}

SCENARIO(
	"`OPENMPCD_DEBUG_ASSERT_HOST`, activated",
	"")
{
	OPENMPCD_DEBUG_ASSERT_HOST(true);
	OPENMPCD_DEBUG_ASSERT_HOST(1 == 1);

	REQUIRE_THROWS_AS(
		OPENMPCD_DEBUG_ASSERT_HOST(false),
		OpenMPCD::AssertionException);
}

SCENARIO(
	"`OPENMPCD_DEBUG_ASSERT_EXCEPTIONTYPE`, activated",
	"")
{
	using OpenMPCD::NULLPointerException;

	OPENMPCD_DEBUG_ASSERT_EXCEPTIONTYPE(true, NULLPointerException);
	OPENMPCD_DEBUG_ASSERT_EXCEPTIONTYPE(1 == 1, NULLPointerException);

	REQUIRE_THROWS_AS(
		OPENMPCD_DEBUG_ASSERT_EXCEPTIONTYPE(false, NULLPointerException),
		NULLPointerException);
}

SCENARIO(
	"`OPENMPCD_DEBUG_ASSERT`, activated",
	"")
{
	OPENMPCD_DEBUG_ASSERT(true);
	OPENMPCD_DEBUG_ASSERT(1 == 1);

	REQUIRE_THROWS_AS(OPENMPCD_DEBUG_ASSERT(false), OpenMPCD::AssertionException);
}


#undef OPENMPCD_DEBUG_ASSERT_HPP
#undef OPENMPCD_DEBUG
#undef OPENMPCD_DEBUG_ASSERT
#undef OPENMPCD_DEBUG_ASSERT_EXCEPTIONTYPE
#undef OPENMPCD_DEBUG_ASSERT_DEVICE
#undef OPENMPCD_DEBUG_ASSERT_HOST
#undef OPENMPCD_DEBUG_ASSERT_HOST_EXCEPTIONTYPE

#include <OpenMPCD/OPENMPCD_DEBUG_ASSERT.hpp>

SCENARIO(
	"`OPENMPCD_DEBUG_ASSERT_HOST_EXCEPTIONTYPE`, deactivated",
	"")
{
	using OpenMPCD::NULLPointerException;

	OPENMPCD_DEBUG_ASSERT_HOST_EXCEPTIONTYPE(true, NULLPointerException);
	OPENMPCD_DEBUG_ASSERT_HOST_EXCEPTIONTYPE(1 == 1, NULLPointerException);

	OPENMPCD_DEBUG_ASSERT_HOST_EXCEPTIONTYPE(false, NULLPointerException);
}

SCENARIO(
	"`OPENMPCD_DEBUG_ASSERT_HOST`, deactivated",
	"")
{
	OPENMPCD_DEBUG_ASSERT_HOST(true);
	OPENMPCD_DEBUG_ASSERT_HOST(1 == 1);

	OPENMPCD_DEBUG_ASSERT_HOST(false);
}

SCENARIO(
	"`OPENMPCD_DEBUG_ASSERT_EXCEPTIONTYPE`, deactivated",
	"")
{
	using OpenMPCD::NULLPointerException;

	OPENMPCD_DEBUG_ASSERT_EXCEPTIONTYPE(true, NULLPointerException);
	OPENMPCD_DEBUG_ASSERT_EXCEPTIONTYPE(1 == 1, NULLPointerException);

	OPENMPCD_DEBUG_ASSERT_EXCEPTIONTYPE(false, NULLPointerException);
}

SCENARIO(
	"`OPENMPCD_DEBUG_ASSERT`, deactivated",
	"")
{
	OPENMPCD_DEBUG_ASSERT(true);
	OPENMPCD_DEBUG_ASSERT(1 == 1);

	OPENMPCD_DEBUG_ASSERT(false);
}
